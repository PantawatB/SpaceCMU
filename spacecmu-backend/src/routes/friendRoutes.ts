import { Router, RequestHandler } from "express";
import { authenticateToken } from "../middleware/auth";
import {
  sendFriendRequest,
  acceptFriendRequest,
  rejectFriendRequest,
  removeFriend,
  listFriends,
  listFriendRequests,
  cancelFriendRequest,
  getFriendStatuses,
} from "../controllers/friendController";
import { updateLastActive } from "../middleware/updateLastActive";

const router = Router();

// Middleware ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å Route ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ
router.use(
  authenticateToken as RequestHandler,
  updateLastActive as RequestHandler
);

// --- ‚öôÔ∏è Friend Requests ---

// ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏ fromActorId ‡πÅ‡∏•‡∏∞ toActorId ‡πÉ‡∏ô body)
// POST /api/friends/request
router.post("/request", sendFriendRequest as RequestHandler);

// ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ
// DELETE /api/friends/request/:requestId
router.delete("/request/:requestId", cancelFriendRequest as RequestHandler);

// ‡∏î‡∏π‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á Actor ID ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
// GET /api/friends/requests/:actorId
router.get("/requests/:actorId", listFriendRequests as RequestHandler);

// ‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
// POST /api/friends/accept/:requestId
router.post("/accept/:requestId", acceptFriendRequest as RequestHandler);

// ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
// POST /api/friends/reject/:requestId
router.post("/reject/:requestId", rejectFriendRequest as RequestHandler);

// --- ü§ù Friends ---

// ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á Actor ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
// GET /api/friends/:actorId
router.get("/:actorId", listFriends as RequestHandler);

// ‡∏•‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
// DELETE /api/friends/:actorId/friends/:friendActorId
router.delete(
  "/:actorId/friends/:friendActorId",
  removeFriend as RequestHandler
);

// ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á Actor ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
// GET /api/friends/:actorId/statuses
router.get("/:actorId/statuses", getFriendStatuses as RequestHandler);

export default router;
